{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan\\\\Desktop\\\\FrontEnd\\\\ip-frontend\\\\src\\\\Components\\\\Administration\\\\AdministrationPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Layout from \"../../Containers/Layout\";\nimport { callback, deleteDoctor, deleteSection, deleteTimeSlot, fetchDoctors, fetchDoctorsWithTime, fetchSection, fetchServices, fetchTimeSlots } from \"./actions\";\nimport { Tabs, Card } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport styles from './administration.module.scss';\nimport { formAddDoctor, formAddSection, formAddService, formAddTimeSlots, selectTimeSlotsDoctors } from \"./components/forms\";\nimport moment from 'moment';\nconst {\n  TabPane\n} = Tabs;\n\nconst Content = () => {\n  _s();\n\n  const [state, setState] = useState({\n    mounted: false,\n\n    /*for section*/\n    name: '',\n    description: '',\n\n    /*for doctor*/\n    firstName: '',\n    lastName: '',\n    specialization: '',\n    section: 0,\n\n    /*sections*/\n    sections: [],\n    services: [],\n\n    /*time interval*/\n    day: 'Luni',\n    startDate: moment(),\n    endDate: moment(),\n\n    /*time slots*/\n    timeslots: [],\n\n    /*doctors*/\n    doctors: [],\n    doctorsFullInfo: [],\n\n    /*pentru asociere doctor - timeslot*/\n    doctor: null,\n    timeslot: null,\n\n    /*pentru serviciu*/\n    price: null,\n    currency: null\n  });\n  useEffect(() => {\n    if (!state.mounted) {\n      fetchSection(setState);\n      fetchServices(setState);\n      fetchTimeSlots(setState);\n      fetchDoctors(setState);\n      fetchDoctorsWithTime(setState);\n      setState(prevState => ({ ...prevState,\n        mounted: true\n      }));\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"1\",\n    onChange: callback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Adauga sectie\",\n    key: \"1\",\n    className: styles.antTabsNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, formAddSection(state, setState), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '50vh',\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, state.sections.length > 0 && state.sections.map(section => /*#__PURE__*/React.createElement(Card, {\n    actions: [/*#__PURE__*/React.createElement(DeleteOutlined, {\n      onClick: () => deleteSection(section, setState),\n      key: \"ellipsis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    })],\n    size: \"small\",\n    title: section.name,\n    style: {\n      width: '100%',\n      margin: '5px 0 0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, section.description))))), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Adauga doctori\",\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, formAddDoctor(state, setState), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '50vh',\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, state.doctors.length > 0 && state.doctors.map(doctor => /*#__PURE__*/React.createElement(Card, {\n    actions: [/*#__PURE__*/React.createElement(DeleteOutlined, {\n      onClick: () => deleteDoctor(doctor, setState),\n      key: \"ellipsis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    })],\n    size: \"small\",\n    title: doctor.first_name + ' ' + doctor.last_name,\n    style: {\n      width: '100%',\n      margin: '5px 0 0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, doctor.specialization))))), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Adauga intervale orare\",\n    key: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, formAddTimeSlots(state, setState), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '50vh',\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, state.timeslots.length > 0 && state.timeslots.map(timeslot => /*#__PURE__*/React.createElement(Card, {\n    actions: [/*#__PURE__*/React.createElement(DeleteOutlined, {\n      onClick: () => deleteTimeSlot(timeslot.value, setState),\n      key: \"ellipsis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    })],\n    size: \"small\",\n    title: timeslot.value.day,\n    style: {\n      width: '100%',\n      margin: '5px 0 0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, timeslot.value.interval))))), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Program doctori\",\n    key: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, selectTimeSlotsDoctors(state, setState), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '50vh',\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, state.doctorsFullInfo.length > 0 && state.doctorsFullInfo.map(doctor => /*#__PURE__*/React.createElement(Card, {\n    actions: [/*#__PURE__*/React.createElement(DeleteOutlined, {\n      onClick: () => deleteTimeSlot(doctor, setState),\n      key: \"ellipsis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    })],\n    size: \"small\",\n    title: doctor.first_name + ' ' + doctor.last_name,\n    style: {\n      width: '100%',\n      margin: '5px 0 0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, doctor.value.day + ' ' + doctor.value.interval), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, doctor.specialization))))), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Adauga servicii\",\n    key: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, formAddService(state, setState), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '50vh',\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, state.services.length > 0 && state.services.map(service => /*#__PURE__*/React.createElement(Card, {\n    actions: [/*#__PURE__*/React.createElement(DeleteOutlined, {\n      onClick: () => deleteSection(service, setState),\n      key: \"ellipsis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    })],\n    size: \"small\",\n    title: service.name,\n    style: {\n      width: '100%',\n      margin: '5px 0 0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, service.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, \"Pret \", service.price, \" \", service.currency)))))));\n};\n/*for adding informations*/\n\n\n_s(Content, \"5vOh4Z6D/5jiGVwFkuFgRpaaB0Y=\");\n\n_c = Content;\nexport const AdministrationPage = props => {\n  return /*#__PURE__*/React.createElement(Layout, {\n    content: /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  });\n};\n_c2 = AdministrationPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"AdministrationPage\");","map":{"version":3,"sources":["C:/Users/Stefan/Desktop/FrontEnd/ip-frontend/src/Components/Administration/AdministrationPage.js"],"names":["React","useEffect","useState","Layout","callback","deleteDoctor","deleteSection","deleteTimeSlot","fetchDoctors","fetchDoctorsWithTime","fetchSection","fetchServices","fetchTimeSlots","Tabs","Card","DeleteOutlined","styles","formAddDoctor","formAddSection","formAddService","formAddTimeSlots","selectTimeSlotsDoctors","moment","TabPane","Content","state","setState","mounted","name","description","firstName","lastName","specialization","section","sections","services","day","startDate","endDate","timeslots","doctors","doctorsFullInfo","doctor","timeslot","price","currency","prevState","container","antTabsNav","display","flexDirection","height","overflow","length","map","width","margin","first_name","last_name","value","interval","service","AdministrationPage","props"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Layout from \"../../Containers/Layout\";\nimport {\n    callback, deleteDoctor, deleteSection, deleteTimeSlot, fetchDoctors, fetchDoctorsWithTime,\n    fetchSection, fetchServices, fetchTimeSlots,\n} from \"./actions\";\nimport {Tabs, Card} from 'antd';\nimport {DeleteOutlined} from '@ant-design/icons';\nimport styles from './administration.module.scss'\nimport {\n    formAddDoctor,\n    formAddSection,\n    formAddService,\n    formAddTimeSlots,\n    selectTimeSlotsDoctors\n} from \"./components/forms\";\nimport moment from 'moment';\n\nconst {TabPane} = Tabs;\n\nconst Content = () => {\n    const [state, setState] = useState({\n        mounted: false,\n        /*for section*/\n        name: '',\n        description: '',\n        /*for doctor*/\n        firstName: '',\n        lastName: '',\n        specialization: '',\n        section: 0,\n        /*sections*/\n        sections: [],\n        services: [],\n        /*time interval*/\n        day: 'Luni',\n        startDate: moment(),\n        endDate: moment(),\n        /*time slots*/\n        timeslots: [],\n        /*doctors*/\n        doctors: [],\n        doctorsFullInfo: [],\n        /*pentru asociere doctor - timeslot*/\n        doctor: null,\n        timeslot: null,\n        /*pentru serviciu*/\n        price: null,\n        currency: null\n    });\n    useEffect(() => {\n        if (!state.mounted) {\n            fetchSection(setState);\n            fetchServices(setState);\n            fetchTimeSlots(setState);\n            fetchDoctors(setState);\n            fetchDoctorsWithTime(setState);\n            setState(prevState => ({\n                ...prevState,\n                mounted: true\n            }));\n        }\n    });\n    return (\n        <div className={styles.container}>\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"Adauga sectie\" key=\"1\" className={styles.antTabsNav}>\n                    {formAddSection(state, setState)}\n                    <div style={{display: 'flex', flexDirection: 'column', height: '50vh', overflow: 'auto'}}>\n                        {state.sections.length > 0 && state.sections.map(section =>\n                            <Card\n                                actions={[\n                                    <DeleteOutlined onClick={() => deleteSection(section, setState)}\n                                                    key=\"ellipsis\"/>\n                                ]}\n                                size=\"small\"\n                                title={section.name} style={{width: '100%', margin: '5px 0 0 0'}}>\n                                <p>{section.description}</p>\n                            </Card>\n                        )}\n                    </div>\n                </TabPane>\n                <TabPane tab=\"Adauga doctori\" key=\"2\">\n                    {formAddDoctor(state, setState)}\n                    <div style={{display: 'flex', flexDirection: 'column', height: '50vh', overflow: 'auto'}}>\n                        {state.doctors.length > 0 && state.doctors.map(doctor =>\n                            <Card\n                                actions={[\n                                    <DeleteOutlined onClick={() => deleteDoctor(doctor, setState)}\n                                                    key=\"ellipsis\"/>\n                                ]}\n                                size=\"small\"\n                                title={doctor.first_name + ' ' + doctor.last_name}\n                                style={{width: '100%', margin: '5px 0 0 0'}}>\n                                <p>{doctor.specialization}</p>\n                            </Card>\n                        )}\n                    </div>\n                </TabPane>\n                <TabPane tab=\"Adauga intervale orare\" key=\"3\">\n                    {formAddTimeSlots(state, setState)}\n                    <div style={{display: 'flex', flexDirection: 'column', height: '50vh', overflow: 'auto'}}>\n                        {state.timeslots.length > 0 && state.timeslots.map(timeslot =>\n                            <Card\n                                actions={[\n                                    <DeleteOutlined onClick={() => deleteTimeSlot(timeslot.value, setState)}\n                                                    key=\"ellipsis\"/>\n                                ]}\n                                size=\"small\"\n                                title={timeslot.value.day}\n                                style={{width: '100%', margin: '5px 0 0 0'}}>\n                                <p>{timeslot.value.interval}</p>\n                            </Card>\n                        )}\n                    </div>\n                </TabPane>\n                <TabPane tab=\"Program doctori\" key=\"4\">\n                    {selectTimeSlotsDoctors(state, setState)}\n                    <div style={{display: 'flex', flexDirection: 'column', height: '50vh', overflow: 'auto'}}>\n                        {state.doctorsFullInfo.length > 0 && state.doctorsFullInfo.map(doctor =>\n                            <Card\n                                actions={[\n                                    <DeleteOutlined onClick={() => deleteTimeSlot(doctor, setState)}\n                                                    key=\"ellipsis\"/>\n                                ]}\n                                size=\"small\"\n                                title={doctor.first_name + ' ' + doctor.last_name}\n                                style={{width: '100%', margin: '5px 0 0 0'}}>\n                                <p>{doctor.value.day + ' ' + doctor.value.interval}</p>\n                                <p>{doctor.specialization}</p>\n                            </Card>\n                        )}\n                    </div>\n                </TabPane>\n                <TabPane tab=\"Adauga servicii\" key=\"5\">\n                    {formAddService(state, setState)}\n                    <div style={{display: 'flex', flexDirection: 'column', height: '50vh', overflow: 'auto'}}>\n                        {state.services.length > 0 && state.services.map(service =>\n                            <Card\n                                actions={[\n                                    <DeleteOutlined onClick={() => deleteSection(service, setState)}\n                                                    key=\"ellipsis\"/>\n                                ]}\n                                size=\"small\"\n                                title={service.name} style={{width: '100%', margin: '5px 0 0 0'}}>\n                                <p>{service.description}</p>\n                                <p>Pret {service.price} {service.currency}</p>\n                            </Card>\n                        )}\n                    </div>\n                </TabPane>\n            </Tabs>\n        </div>\n    )\n};\n/*for adding informations*/\nexport const AdministrationPage = props => {\n    return (\n        <Layout content={(<Content/>)}/>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}