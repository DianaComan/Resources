{"ast":null,"code":"import actions from \"../actions/profile.actions\";\nimport axios from 'axios';\nimport { NOTIFICATION_TYPES, openNotification } from \"../../Components/Notifications/notifications\";\nimport history from '../../Routes/history';\n\nconst profileFunctions = dispatch => {\n  const logout = () => {\n    dispatch(actions.logout());\n  };\n\n  const login = async (email, password) => {\n    var url = 'http://127.0.0.1:8080/login/?username=' + email + '&password=' + password;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      const token = response.data.token;\n\n      if (response.data === 'login succesful') {\n        openNotification('LOGIN', \"Autentificarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n        dispatch(actions.authenticate(token));\n      } else {\n        openNotification('LOGIN', \"Email sau parola gresita!\", NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const signup = async (nume, pass, email, firstname, lastname, organizatie) => {\n    var url = 'http://127.0.0.1:8080/users/createUser/?username=' + nume + '&password=' + pass + '&email=' + email + '&firstname=' + firstname + '&lastname=' + lastname + '&organizationName=' + organizatie;\n    axios.post(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      const token = response.data.token;\n\n      if (response.status === 200) {\n        openNotification('SIGNUP', \"Inregistrarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n        dispatch(actions.signup(token));\n        var organisationInfo = getOrganisationInfo(organizatie);\n        console.log(organisationInfo);\n        history.push('/login');\n        setTimeout(function () {\n          window.location.reload();\n        }, 1000);\n      } else {\n        openNotification('SIGNUP', \"Contul exista deja / Nu a putut fi inregistrat contul!\", NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const getProfile = async username => {\n    var url = 'http://127.0.0.1:8080/users/getUserByUsername/?username=' + username;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.details(response.data));\n    });\n  };\n\n  const getOrganisationInfo = async organisationName => {\n    var url = 'http://127.0.0.1:8080/organizations/getOrganizationByName/?name=' + organisationName;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      return response.data;\n    });\n  };\n\n  const getMembers = async organizationId => {\n    var url = 'http://127.0.0.1:8080/users/getUsersByOrganization/?id=' + organizationId;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.members(response.data));\n    });\n  };\n\n  const getResources = async organizationId => {\n    var url = 'http://127.0.0.1:8080/resources/getResourcesByOrganizationId/?id=' + organizationId;\n    axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.resources(response.data));\n    });\n  };\n\n  const getUserProfile = async userId => {\n    var url = 'http://127.0.0.1:8080/users/getUser/?id=' + userId;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.userprofile(response.data));\n    });\n  };\n\n  const getResourceProfile = async resourceName => {\n    var url = 'http://127.0.0.1:8080/resources/getResourceByName/?name=' + resourceName;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.resourceprofile(response.data));\n    });\n  };\n\n  const reserveResource = async (username, resourceName, estimatedTime) => {\n    var url = 'http://127.0.0.1:8080/resources/reserve/?username=' + username + '&resourceName=' + resourceName + '&estimatedTime=' + estimatedTime;\n    axios.put(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    });\n  };\n\n  const unreserveResource = async (username, resourceName) => {\n    var url = 'http://127.0.0.1:8080/resources/unreserve/?username=' + username + '&resourceName=' + resourceName;\n    axios.put(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    });\n  };\n\n  const subscribe = async (username, resourceName) => {\n    var url = 'http://127.0.0.1:8080/resources/subscribe/?username=' + username + '&resourceName=' + resourceName;\n    axios.post(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      if (response.data === 'ok') {\n        openNotification('Subscribe', \"Te-ai abonat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n      } else {\n        openNotification('Subscribe', 'Abonarea nu s-a putut realiza cu succes', NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const createOrganisation = async organisationName => {\n    var url = 'http://127.0.0.1:8080/organizations/createOrganization/?name=' + organisationName;\n    axios.post(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      if (response.data === 'ok') {\n        openNotification('Create', \"Organizatia a fost creata cu succes\", NOTIFICATION_TYPES.SUCCESS);\n        history.push('/signup');\n        setTimeout(function () {\n          window.location.reload();\n        }, 1000);\n      } else {\n        openNotification('Create', 'Organizatia nu a putut fi creata', NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const makeAdmin = async username => {\n    var url = 'http://127.0.0.1:8080/users/makeUserAdmin/?username=' + username;\n    axios.put(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      console.log(response.data);\n    });\n  };\n\n  const getSession = () => {\n    dispatch(actions.getSession());\n  };\n\n  const changePage = page => {\n    dispatch(actions.changeTab(page));\n  };\n\n  const getCurrentPage = () => {\n    dispatch(actions.getActivePage);\n  };\n\n  return {\n    logout,\n    login,\n    signup,\n    getSession,\n    changePage,\n    getCurrentPage,\n    getProfile,\n    getMembers,\n    getResources,\n    getUserProfile,\n    getResourceProfile,\n    reserveResource,\n    unreserveResource,\n    subscribe,\n    createOrganisation,\n    makeAdmin,\n    getOrganisationInfo\n  };\n};\n\nexport default profileFunctions;","map":{"version":3,"sources":["C:/Users/Stefan/Desktop/FrontEnd/ip-frontend/src/Context/functions/profile.functions.js"],"names":["actions","axios","NOTIFICATION_TYPES","openNotification","history","profileFunctions","dispatch","logout","login","email","password","url","get","headers","then","response","token","data","SUCCESS","authenticate","ERROR","signup","nume","pass","firstname","lastname","organizatie","post","status","organisationInfo","getOrganisationInfo","console","log","push","setTimeout","window","location","reload","getProfile","username","details","organisationName","getMembers","organizationId","members","getResources","resources","getUserProfile","userId","userprofile","getResourceProfile","resourceName","resourceprofile","reserveResource","estimatedTime","put","unreserveResource","subscribe","createOrganisation","makeAdmin","getSession","changePage","page","changeTab","getCurrentPage","getActivePage"],"mappings":"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","sourcesContent":["import actions from \"../actions/profile.actions\";\nimport axios from 'axios';\nimport {NOTIFICATION_TYPES, openNotification} from \"../../Components/Notifications/notifications\";\nimport history from '../../Routes/history'\n\nconst profileFunctions = dispatch => {\n   \n    const logout = () => {\n        dispatch(actions.logout());\n    };\n    const login = async (email, password) => {\n        var url = 'http://127.0.0.1:8080/login/?username=' + email + '&password=' + password\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            const token = response.data.token;\n            if (response.data === 'login succesful') {\n                openNotification('LOGIN', \"Autentificarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n                dispatch(actions.authenticate(token))\n            }\n            else {\n                openNotification('LOGIN', \"Email sau parola gresita!\", NOTIFICATION_TYPES.ERROR);\n            }\n        });\n    };\n\n    const signup = async (nume, pass, email, firstname, lastname, organizatie) => {\n        var url = 'http://127.0.0.1:8080/users/createUser/?username=' + nume + '&password=' + pass +\n        '&email=' + email + '&firstname=' + firstname + '&lastname=' + lastname + '&organizationName=' + organizatie\n        axios.post(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            const token = response.data.token;\n            if (response.status === 200) {\n                openNotification('SIGNUP', \"Inregistrarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n                dispatch(actions.signup(token))\n                var organisationInfo = getOrganisationInfo(organizatie)\n                console.log(organisationInfo)\n                history.push('/login')\n                setTimeout(function() {\n                    window.location.reload()\n                }, 1000)\n            }\n            else {\n                openNotification('SIGNUP', \"Contul exista deja / Nu a putut fi inregistrat contul!\", NOTIFICATION_TYPES.ERROR);\n            }\n        })\n    };\n\n    const getProfile = async(username) => {\n        var url = 'http://127.0.0.1:8080/users/getUserByUsername/?username=' + username\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.details(response.data))\n        })\n    }\n\n    const getOrganisationInfo = async(organisationName) => {\n        var url = 'http://127.0.0.1:8080/organizations/getOrganizationByName/?name=' + organisationName\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            return response.data\n        })\n    }\n\n    const getMembers = async(organizationId) => {\n        var url = 'http://127.0.0.1:8080/users/getUsersByOrganization/?id=' + organizationId\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.members(response.data))\n        })\n    }\n\n    const getResources = async(organizationId) => {\n        var url = 'http://127.0.0.1:8080/resources/getResourcesByOrganizationId/?id=' + organizationId\n        axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.resources(response.data))\n        })\n    }\n\n    const getUserProfile = async(userId) => {\n        var url = 'http://127.0.0.1:8080/users/getUser/?id=' + userId\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.userprofile(response.data))\n        })\n    }\n\n    const getResourceProfile = async(resourceName) => {\n        var url = 'http://127.0.0.1:8080/resources/getResourceByName/?name=' + resourceName\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.resourceprofile(response.data))\n        })\n    }\n\n   const reserveResource = async(username, resourceName, estimatedTime) => {\n        var url = 'http://127.0.0.1:8080/resources/reserve/?username=' + username +\n        '&resourceName=' + resourceName + '&estimatedTime=' + estimatedTime\n        axios.put(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        })\n   }\n\n   const unreserveResource = async(username, resourceName) => {\n        var url = 'http://127.0.0.1:8080/resources/unreserve/?username=' + username + '&resourceName=' + resourceName\n        axios.put(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        })\n   }\n\n    const subscribe = async(username, resourceName) => {\n        var url = 'http://127.0.0.1:8080/resources/subscribe/?username=' + username + '&resourceName=' + resourceName\n        axios.post(url, {\n           headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            if (response.data === 'ok') {\n                openNotification('Subscribe', \"Te-ai abonat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n            } else {\n                openNotification('Subscribe', 'Abonarea nu s-a putut realiza cu succes', NOTIFICATION_TYPES.ERROR);\n            }\n        })\n   }\n\n   const createOrganisation = async(organisationName) => {\n        var url = 'http://127.0.0.1:8080/organizations/createOrganization/?name=' + organisationName\n        axios.post(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n         }).then(response => {\n             if (response.data === 'ok') {\n                openNotification('Create', \"Organizatia a fost creata cu succes\", NOTIFICATION_TYPES.SUCCESS);\n                history.push('/signup')\n                setTimeout(function() {\n                    window.location.reload()\n                }, 1000)\n             } else {\n                openNotification('Create', 'Organizatia nu a putut fi creata', NOTIFICATION_TYPES.ERROR);\n             }\n         })\n   }\n\n   const makeAdmin = async(username) => {\n       var url = 'http://127.0.0.1:8080/users/makeUserAdmin/?username=' + username\n        axios.put(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            console.log(response.data)\n        })\n   }\n\n\n    const getSession = () => {\n        dispatch(actions.getSession());\n    };\n    const changePage = page => {\n        dispatch(actions.changeTab(page));\n    };\n    const getCurrentPage = () => {\n        dispatch(actions.getActivePage);\n    };\n    return {\n        logout,\n        login,\n        signup,\n        getSession,\n        changePage,\n        getCurrentPage,\n        getProfile,\n        getMembers,\n        getResources,\n        getUserProfile,\n        getResourceProfile,\n        reserveResource,\n        unreserveResource,\n        subscribe,\n        createOrganisation,\n        makeAdmin,\n        getOrganisationInfo\n    };\n};\n\nexport default profileFunctions;\n"]},"metadata":{},"sourceType":"module"}