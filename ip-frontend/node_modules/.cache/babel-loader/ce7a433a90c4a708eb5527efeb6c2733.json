{"ast":null,"code":"import actions from \"../actions/profile.actions\";\nimport axios from 'axios';\nimport { NOTIFICATION_TYPES, openNotification } from \"../../Components/Notifications/notifications\";\nimport history from '../../Routes/history';\n\nconst profileFunctions = dispatch => {\n  const logout = () => {\n    dispatch(actions.logout());\n  };\n\n  const login = async (email, password) => {\n    var url = 'http://127.0.0.1:8080/login/?username=' + email + '&password=' + password;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      const token = response.data.token;\n\n      if (response.data === 'login succesful') {\n        openNotification('LOGIN', \"Autentificarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n        dispatch(actions.authenticate(token));\n      } else {\n        openNotification('LOGIN', \"Email sau parola gresita!\", NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const signup = async (nume, pass, email, firstname, lastname, organizatie) => {\n    var url = 'http://127.0.0.1:8080/users/createUser/?username=' + nume + '&password=' + pass + '&email=' + email + '&firstname=' + firstname + '&lastname=' + lastname + '&organizationName=' + organizatie;\n    axios.post(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      const token = response.data.token;\n\n      if (response.status === 200) {\n        openNotification('SIGNUP', \"Inregistrarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n        dispatch(actions.signup(token));\n        getOrganisationInfo(organizatie).then(result => {\n          getMembersTemp(result.data.id).then(result => {\n            if (result.data.length === 1) {\n              makeAdmin(nume);\n            }\n          });\n        });\n        history.push('/login');\n        setTimeout(function () {\n          window.location.reload();\n        }, 1000);\n      } else {\n        openNotification('SIGNUP', \"Contul exista deja / Nu a putut fi inregistrat contul!\", NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const createResource = async (name, organisationId) => {\n    var url = 'http://127.0.0.1:8080/resources/createResources/?name=' + name + '&organizationId=' + organisationId;\n    axios.post(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      if (response.data === 'ok') {\n        openNotification('Add Resource', \"Adaugarea de resursa s-a implinit cu succes\", NOTIFICATION_TYPES.SUCCESS);\n      } else {\n        openNotification('Add Resource', \"Adaugarea de resursa a esuat\", NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const deleteResource = async (name, organisationId) => {\n    var url = 'http://127.0.0.1:8080/resources/createResources/?name=' + name + '&organizationId=' + organisationId;\n    axios.post(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      if (response.data === 'ok') {\n        openNotification('Add Resource', \"Adaugarea de resursa s-a implinit cu succes\", NOTIFICATION_TYPES.SUCCESS);\n      } else {\n        openNotification('Add Resource', \"Adaugarea de resursa a esuat\", NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const getProfile = async username => {\n    var url = 'http://127.0.0.1:8080/users/getUserByUsername/?username=' + username;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.details(response.data));\n    });\n  };\n\n  const getOrganisationInfo = async organisationName => {\n    var url = 'http://127.0.0.1:8080/organizations/getOrganizationByName/?name=' + organisationName;\n    return await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    });\n  };\n\n  const getMembersTemp = async organizationId => {\n    var url = 'http://127.0.0.1:8080/users/getUsersByOrganization/?id=' + organizationId;\n    return await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    });\n  };\n\n  const getMembers = async organizationId => {\n    var url = 'http://127.0.0.1:8080/users/getUsersByOrganization/?id=' + organizationId;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.members(response.data));\n    });\n  };\n\n  const getResources = async organizationId => {\n    var url = 'http://127.0.0.1:8080/resources/getResourcesByOrganizationId/?id=' + organizationId;\n    axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.resources(response.data));\n    });\n  };\n\n  const getUserProfile = async userId => {\n    var url = 'http://127.0.0.1:8080/users/getUser/?id=' + userId;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.userprofile(response.data));\n    });\n  };\n\n  const getResourceProfile = async resourceName => {\n    var url = 'http://127.0.0.1:8080/resources/getResourceByName/?name=' + resourceName;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.resourceprofile(response.data));\n    });\n  };\n\n  const reserveResource = async (username, resourceName, estimatedTime) => {\n    var url = 'http://127.0.0.1:8080/resources/reserve/?username=' + username + '&resourceName=' + resourceName + '&estimatedTime=' + estimatedTime;\n    axios.put(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    });\n  };\n\n  const unreserveResource = async (username, resourceName) => {\n    var url = 'http://127.0.0.1:8080/resources/unreserve/?username=' + username + '&resourceName=' + resourceName;\n    axios.put(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    });\n  };\n\n  const subscribe = async (username, resourceName) => {\n    var url = 'http://127.0.0.1:8080/resources/subscribe/?username=' + username + '&resourceName=' + resourceName;\n    axios.post(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      if (response.data === 'ok') {\n        openNotification('Subscribe', \"Te-ai abonat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n      } else {\n        openNotification('Subscribe', 'Abonarea nu s-a putut realiza cu succes', NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const createOrganisation = async organisationName => {\n    var url = 'http://127.0.0.1:8080/organizations/createOrganization/?name=' + organisationName;\n    axios.post(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      if (response.data === 'ok') {\n        openNotification('Create', \"Organizatia a fost creata cu succes\", NOTIFICATION_TYPES.SUCCESS);\n        history.push('/signup');\n        setTimeout(function () {\n          window.location.reload();\n        }, 1000);\n      } else {\n        openNotification('Create', 'Organizatia nu a putut fi creata', NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const makeAdmin = async username => {\n    var url = 'http://127.0.0.1:8080/users/makeUserAdmin/?username=' + username;\n    axios.put(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      console.log(response.data);\n    });\n  };\n\n  const getSession = () => {\n    dispatch(actions.getSession());\n  };\n\n  const changePage = page => {\n    dispatch(actions.changeTab(page));\n  };\n\n  const getCurrentPage = () => {\n    dispatch(actions.getActivePage);\n  };\n\n  return {\n    logout,\n    login,\n    signup,\n    getSession,\n    changePage,\n    getCurrentPage,\n    getProfile,\n    getMembers,\n    getResources,\n    getUserProfile,\n    getResourceProfile,\n    reserveResource,\n    unreserveResource,\n    subscribe,\n    createOrganisation,\n    makeAdmin,\n    getOrganisationInfo,\n    getMembersTemp\n  };\n};\n\nexport default profileFunctions;","map":{"version":3,"sources":["C:/Users/Stefan/Desktop/FrontEnd/ip-frontend/src/Context/functions/profile.functions.js"],"names":["actions","axios","NOTIFICATION_TYPES","openNotification","history","profileFunctions","dispatch","logout","login","email","password","url","get","headers","then","response","token","data","SUCCESS","authenticate","ERROR","signup","nume","pass","firstname","lastname","organizatie","post","status","getOrganisationInfo","result","getMembersTemp","id","length","makeAdmin","push","setTimeout","window","location","reload","createResource","name","organisationId","deleteResource","getProfile","username","details","organisationName","organizationId","getMembers","members","getResources","resources","getUserProfile","userId","userprofile","getResourceProfile","resourceName","resourceprofile","reserveResource","estimatedTime","put","unreserveResource","subscribe","createOrganisation","console","log","getSession","changePage","page","changeTab","getCurrentPage","getActivePage"],"mappings":"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","sourcesContent":["import actions from \"../actions/profile.actions\";\nimport axios from 'axios';\nimport {NOTIFICATION_TYPES, openNotification} from \"../../Components/Notifications/notifications\";\nimport history from '../../Routes/history'\n\nconst profileFunctions = dispatch => {\n   \n    const logout = () => {\n        dispatch(actions.logout());\n    };\n    const login = async (email, password) => {\n        var url = 'http://127.0.0.1:8080/login/?username=' + email + '&password=' + password\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            const token = response.data.token;\n            if (response.data === 'login succesful') {\n                openNotification('LOGIN', \"Autentificarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n                dispatch(actions.authenticate(token))\n            }\n            else {\n                openNotification('LOGIN', \"Email sau parola gresita!\", NOTIFICATION_TYPES.ERROR);\n            }\n        });\n    };\n\n    const signup = async (nume, pass, email, firstname, lastname, organizatie) => {\n        var url = 'http://127.0.0.1:8080/users/createUser/?username=' + nume + '&password=' + pass +\n        '&email=' + email + '&firstname=' + firstname + '&lastname=' + lastname + '&organizationName=' + organizatie\n        axios.post(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            const token = response.data.token;\n            if (response.status === 200) {\n                openNotification('SIGNUP', \"Inregistrarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n                dispatch(actions.signup(token))\n                getOrganisationInfo(organizatie).then(result => {\n                    getMembersTemp(result.data.id).then(result => {\n                        if (result.data.length === 1) {\n                            makeAdmin(nume)\n                        }\n                    })\n                })\n                history.push('/login')\n                setTimeout(function() {\n                    window.location.reload()\n                }, 1000)\n            }\n            else {\n                openNotification('SIGNUP', \"Contul exista deja / Nu a putut fi inregistrat contul!\", NOTIFICATION_TYPES.ERROR);\n            }\n        })\n    };\n\n    const createResource = async(name, organisationId) => {\n        var url = 'http://127.0.0.1:8080/resources/createResources/?name=' + name + '&organizationId=' + organisationId\n        axios.post(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            if (response.data === 'ok') {\n                openNotification('Add Resource', \"Adaugarea de resursa s-a implinit cu succes\", NOTIFICATION_TYPES.SUCCESS);\n            } else {\n                openNotification('Add Resource', \"Adaugarea de resursa a esuat\", NOTIFICATION_TYPES.ERROR);\n            }\n        })\n    }\n\n    const deleteResource = async(name, organisationId) => {\n        var url = 'http://127.0.0.1:8080/resources/createResources/?name=' + name + '&organizationId=' + organisationId\n        axios.post(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            if (response.data === 'ok') {\n                openNotification('Add Resource', \"Adaugarea de resursa s-a implinit cu succes\", NOTIFICATION_TYPES.SUCCESS);\n            } else {\n                openNotification('Add Resource', \"Adaugarea de resursa a esuat\", NOTIFICATION_TYPES.ERROR);\n            }\n        })\n    }\n\n    const getProfile = async(username) => {\n        var url = 'http://127.0.0.1:8080/users/getUserByUsername/?username=' + username\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.details(response.data))\n        })\n    }\n\n    const getOrganisationInfo = async(organisationName) => {\n        var url = 'http://127.0.0.1:8080/organizations/getOrganizationByName/?name=' + organisationName\n        return await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        })\n    }\n\n    const getMembersTemp = async(organizationId) => {\n        var url = 'http://127.0.0.1:8080/users/getUsersByOrganization/?id=' + organizationId\n        return await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        })\n    }\n\n    const getMembers = async(organizationId) => {\n        var url = 'http://127.0.0.1:8080/users/getUsersByOrganization/?id=' + organizationId\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.members(response.data))\n        })\n    }\n\n    const getResources = async(organizationId) => {\n        var url = 'http://127.0.0.1:8080/resources/getResourcesByOrganizationId/?id=' + organizationId\n        axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.resources(response.data))\n        })\n    }\n\n    const getUserProfile = async(userId) => {\n        var url = 'http://127.0.0.1:8080/users/getUser/?id=' + userId\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.userprofile(response.data))\n        })\n    }\n\n    const getResourceProfile = async(resourceName) => {\n        var url = 'http://127.0.0.1:8080/resources/getResourceByName/?name=' + resourceName\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.resourceprofile(response.data))\n        })\n    }\n\n   const reserveResource = async(username, resourceName, estimatedTime) => {\n        var url = 'http://127.0.0.1:8080/resources/reserve/?username=' + username +\n        '&resourceName=' + resourceName + '&estimatedTime=' + estimatedTime\n        axios.put(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        })\n   }\n\n   const unreserveResource = async(username, resourceName) => {\n        var url = 'http://127.0.0.1:8080/resources/unreserve/?username=' + username + '&resourceName=' + resourceName\n        axios.put(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        })\n   }\n\n    const subscribe = async(username, resourceName) => {\n        var url = 'http://127.0.0.1:8080/resources/subscribe/?username=' + username + '&resourceName=' + resourceName\n        axios.post(url, {\n           headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            if (response.data === 'ok') {\n                openNotification('Subscribe', \"Te-ai abonat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n            } else {\n                openNotification('Subscribe', 'Abonarea nu s-a putut realiza cu succes', NOTIFICATION_TYPES.ERROR);\n            }\n        })\n   }\n\n   const createOrganisation = async(organisationName) => {\n        var url = 'http://127.0.0.1:8080/organizations/createOrganization/?name=' + organisationName\n        axios.post(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n         }).then(response => {\n             if (response.data === 'ok') {\n                openNotification('Create', \"Organizatia a fost creata cu succes\", NOTIFICATION_TYPES.SUCCESS);\n                history.push('/signup')\n                setTimeout(function() {\n                    window.location.reload()\n                }, 1000)\n             } else {\n                openNotification('Create', 'Organizatia nu a putut fi creata', NOTIFICATION_TYPES.ERROR);\n             }\n         })\n   }\n\n   const makeAdmin = async(username) => {\n       var url = 'http://127.0.0.1:8080/users/makeUserAdmin/?username=' + username\n        axios.put(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            console.log(response.data)\n        })\n   }\n\n\n    const getSession = () => {\n        dispatch(actions.getSession());\n    };\n    const changePage = page => {\n        dispatch(actions.changeTab(page));\n    };\n    const getCurrentPage = () => {\n        dispatch(actions.getActivePage);\n    };\n    return {\n        logout,\n        login,\n        signup,\n        getSession,\n        changePage,\n        getCurrentPage,\n        getProfile,\n        getMembers,\n        getResources,\n        getUserProfile,\n        getResourceProfile,\n        reserveResource,\n        unreserveResource,\n        subscribe,\n        createOrganisation,\n        makeAdmin,\n        getOrganisationInfo,\n        getMembersTemp\n    };\n};\n\nexport default profileFunctions;\n"]},"metadata":{},"sourceType":"module"}