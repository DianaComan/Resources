{"ast":null,"code":"import actions from \"../actions/profile.actions\";\nimport axios from 'axios';\nimport { NOTIFICATION_TYPES, openNotification } from \"../../Components/Notifications/notifications\";\nimport history from '../../Routes/history';\n\nconst profileFunctions = dispatch => {\n  const logout = () => {\n    dispatch(actions.logout());\n  };\n\n  const login = async (email, password) => {\n    var url = 'http://127.0.0.1:8080/login/?username=' + email + '&password=' + password;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      const token = response.data.token;\n\n      if (response.status === 200) {\n        openNotification('LOGIN', \"Autentificarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n        dispatch(actions.authenticate(token));\n      } else {\n        openNotification('LOGIN', \"Email sau parola gresita!\", NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const signup = async (nume, pass, email, firstname, lastname, organizatie) => {\n    var url = 'http://127.0.0.1:8080/users/createUser/?username=' + nume + '&password=' + pass + '&email=' + email + '&firstname=' + firstname + '&lastname=' + lastname + '&organizationName=' + organizatie;\n    axios.post(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      const token = response.data.token;\n\n      if (response.status === 200) {\n        openNotification('SIGNUP', \"Inregistrarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n        dispatch(actions.signup(token));\n        history.push('/login');\n        setTimeout(function () {\n          window.location.reload();\n        }, 1000);\n      } else {\n        openNotification('SIGNUP', \"Contul exista deja / Nu a putut fi inregistrat contul!\", NOTIFICATION_TYPES.ERROR);\n      }\n    });\n  };\n\n  const getProfile = async username => {\n    var url = 'http://127.0.0.1:8080/users/getUserByUsername/?username=' + username;\n    await axios.get(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      dispatch(actions.authenticate(response.data));\n    });\n  };\n\n  const getSession = () => {\n    dispatch(actions.getSession());\n  };\n\n  const changePage = page => {\n    dispatch(actions.changeTab(page));\n  };\n\n  const getCurrentPage = () => {\n    dispatch(actions.getActivePage);\n  };\n\n  return {\n    logout,\n    login,\n    signup,\n    getSession,\n    changePage,\n    getCurrentPage,\n    getProfile\n  };\n};\n\nexport default profileFunctions;","map":{"version":3,"sources":["C:/Users/Stefan/Desktop/FrontEnd/ip-frontend/src/Context/functions/profile.functions.js"],"names":["actions","axios","NOTIFICATION_TYPES","openNotification","history","profileFunctions","dispatch","logout","login","email","password","url","get","headers","then","response","token","data","status","SUCCESS","authenticate","ERROR","signup","nume","pass","firstname","lastname","organizatie","post","push","setTimeout","window","location","reload","getProfile","username","getSession","changePage","page","changeTab","getCurrentPage","getActivePage"],"mappings":"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","sourcesContent":["import actions from \"../actions/profile.actions\";\nimport axios from 'axios';\nimport {NOTIFICATION_TYPES, openNotification} from \"../../Components/Notifications/notifications\";\nimport history from '../../Routes/history'\n\nconst profileFunctions = dispatch => {\n   \n    const logout = () => {\n        dispatch(actions.logout());\n    };\n    const login = async (email, password) => {\n        var url = 'http://127.0.0.1:8080/login/?username=' + email + '&password=' + password\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            const token = response.data.token;\n            if (response.status === 200) {\n                openNotification('LOGIN', \"Autentificarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n                dispatch(actions.authenticate(token))\n            }\n            else {\n                openNotification('LOGIN', \"Email sau parola gresita!\", NOTIFICATION_TYPES.ERROR);\n            }\n        });\n    };\n    const signup = async (nume, pass, email, firstname, lastname, organizatie) => {\n        var url = 'http://127.0.0.1:8080/users/createUser/?username=' + nume + '&password=' + pass +\n        '&email=' + email + '&firstname=' + firstname + '&lastname=' + lastname + '&organizationName=' + organizatie\n        axios.post(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            const token = response.data.token;\n            if (response.status === 200) {\n                openNotification('SIGNUP', \"Inregistrarea s-a realizat cu succes\", NOTIFICATION_TYPES.SUCCESS);\n                dispatch(actions.signup(token))\n                history.push('/login')\n                setTimeout(function() {\n                    window.location.reload()\n                }, 1000)\n            }\n            else {\n                openNotification('SIGNUP', \"Contul exista deja / Nu a putut fi inregistrat contul!\", NOTIFICATION_TYPES.ERROR);\n            }\n        })\n    };\n\n    const getProfile = async(username) => {\n        var url = 'http://127.0.0.1:8080/users/getUserByUsername/?username=' + username\n        await axios.get(url, {\n            headers: {\"Access-Control-Allow-Origin\": \"*\"}\n        }).then(response => {\n            dispatch(actions.authenticate(response.data))\n        })\n    }\n\n    const getSession = () => {\n        dispatch(actions.getSession());\n    };\n    const changePage = page => {\n        dispatch(actions.changeTab(page));\n    };\n    const getCurrentPage = () => {\n        dispatch(actions.getActivePage);\n    };\n    return {\n        logout,\n        login,\n        signup,\n        getSession,\n        changePage,\n        getCurrentPage,\n        getProfile\n    };\n};\n\nexport default profileFunctions;\n"]},"metadata":{},"sourceType":"module"}