{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan\\\\Desktop\\\\FrontEnd\\\\ip-frontend\\\\src\\\\Components\\\\Administration\\\\components\\\\forms.js\";\nimport { Button, Form, Input, Select, TimePicker } from \"antd\";\nimport { handleChange, onSubmitDoctor, onSubmitDoctorTimeSlot, onSubmitSection, onSubmitService, onSubmitTimeInterval } from \"../actions\";\nimport styles from \"../administration.module.scss\";\nimport React from \"react\";\nimport moment from 'moment';\nimport { PlusSquareOutlined } from '@ant-design/icons';\nconst format = 'HH:mm';\nconst days = ['Luni', 'Marti', 'Miercuri', 'Joi', 'Vineri', 'Sambata', 'Duminica'];\nexport const formAddService = (state, setState) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: 'vertical',\n    onFinish: onSubmitSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: 'Serviciul trebuie sa aiba un nume!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: state.name,\n    onChange: event => handleChange(setState, event, 'name'),\n    placeholder: \"Nume\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"description\",\n    rules: [{\n      required: true,\n      message: 'Serviciul trebuie sa aiba o descriere!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    value: state.description,\n    onChange: event => handleChange(setState, event, 'description'),\n    type: \"description\",\n    placeholder: \"Descriere\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Pret\",\n    style: {\n      width: '25%'\n    },\n    value: state.price,\n    onChange: event => handleChange(setState, event, 'price'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Valuta\",\n    onChange: event => handleChange(setState, event, 'currency'),\n    style: {\n      width: '25%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: 'RON',\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"RON\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: 'EURO',\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"EURO\")), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: '25%'\n    },\n    placeholder: 'Alege doctor',\n    onChange: event => handleChange(setState, event, 'doctor'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, state.doctors.length > 0 && state.doctors.map((doctor, index) => {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: index,\n      value: doctor.first_name + ' ' + doctor.last_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, doctor.first_name + ' ' + doctor.last_name);\n  })), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: '25%'\n    },\n    placeholder: 'Alege interval',\n    onChange: event => handleChange(setState, event, 'timeslot'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, state.timeslots.length > 0 && state.timeslots.map((timeslot, index) => {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: index,\n      value: timeslot.value.day + ' ' + timeslot.value.interval,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, timeslot.value.day + ' ' + timeslot.value.interval);\n  })))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onSubmitService(state, setState),\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Salvare\")));\n};\nexport const formAddDoctor = (state, setState) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: 'vertical',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"firstname\",\n    rules: [{\n      required: true,\n      message: 'Doctorul trebuie sa aiba un prenume!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '50%'\n    },\n    value: state.firstName,\n    onChange: event => handleChange(setState, event, 'firstName'),\n    placeholder: \"Prenume\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '50%'\n    },\n    value: state.lastName,\n    onChange: event => handleChange(setState, event, 'lastName'),\n    placeholder: \"Nume\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"specialization\",\n    rules: [{\n      required: true,\n      message: 'Doctorul trebuie sa aiba o specializare!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    value: state.specialization,\n    onChange: event => handleChange(setState, event, 'specialization'),\n    placeholder: \"Specializare\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"Sectie\",\n    rules: [{\n      required: true,\n      message: 'Doctorul trebuie sa aiba apartina unei sectii!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    showSearch: true,\n    style: {\n      width: '100%'\n    },\n    onChange: event => handleChange(setState, event, 'section'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, state.sections.length && state.sections.map((section, index) => {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: index,\n      value: section.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, section.name);\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      onSubmitDoctor(state.lastName, state.firstName, state.specialization, state.section, state.sections, setState);\n    },\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Salvare\")));\n};\nexport const formAddTimeSlots = (state, setState) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: 'vertical',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"Interval orar\",\n    rules: [{\n      required: true,\n      message: 'Intervalul este incomplet!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: '30%'\n    },\n    onChange: event => handleChange(setState, event, 'day'),\n    defaultValue: days[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, days.map((day, index) => {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: index,\n      value: day,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }, day);\n  })), /*#__PURE__*/React.createElement(TimePicker, {\n    style: {\n      width: '30%'\n    },\n    value: state.startDate,\n    onChange: event => handleChange(setState, event, 'startDate'),\n    defaultValue: moment('00:00', format),\n    format: format,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TimePicker, {\n    style: {\n      width: '30%'\n    },\n    value: state.endDate,\n    onChange: event => handleChange(setState, event, 'endDate'),\n    defaultValue: moment('00:00', format),\n    format: format,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: '10%',\n      height: '34px',\n      border: 'none'\n    },\n    onClick: () => {\n      onSubmitTimeInterval(state.day, state.startDate, state.endDate, setState);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PlusSquareOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 24\n    }\n  })))));\n};\nexport const formAddSection = (state, setState) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: 'vertical',\n    onFinish: onSubmitSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: 'Sectiunea trebuie sa aiba un nume!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: state.name,\n    onChange: event => handleChange(setState, event, 'name'),\n    placeholder: \"Nume\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"description\",\n    rules: [{\n      required: true,\n      message: 'Sectiunea trebuie sa aiba o descriere!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    value: state.description,\n    onChange: event => handleChange(setState, event, 'description'),\n    type: \"description\",\n    placeholder: \"Descriere\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onSubmitSection(state.name, state.description, setState),\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, \"Salvare\")));\n};\nexport const selectTimeSlotsDoctors = (state, setState) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: 'vertical',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"Interval orar\",\n    rules: [{\n      required: true,\n      message: 'Asociere incompleta!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: 'Alege doctor',\n    style: {\n      width: '30%'\n    },\n    onChange: event => handleChange(setState, event, 'doctor'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 21\n    }\n  }, state.doctors.length > 0 && state.doctors.map((doctor, index) => {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: index,\n      value: doctor.first_name + ' ' + doctor.last_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 37\n      }\n    }, doctor.first_name + ' ' + doctor.last_name);\n  })), /*#__PURE__*/React.createElement(Select, {\n    placeholder: 'Alege interval',\n    style: {\n      width: '30%'\n    },\n    onChange: event => handleChange(setState, event, 'timeslot'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  }, state.timeslots.length > 0 && state.timeslots.map((timeslot, index) => {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      key: index,\n      value: timeslot.value.day + ' ' + timeslot.value.interval,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 37\n      }\n    }, timeslot.value.day + ' ' + timeslot.value.interval);\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: '10%',\n      height: '34px',\n      border: 'none'\n    },\n    onClick: () => {\n      onSubmitDoctorTimeSlot(state, state.doctor, state.timeslot, setState);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PlusSquareOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 24\n    }\n  })))));\n};","map":{"version":3,"sources":["C:/Users/Stefan/Desktop/FrontEnd/ip-frontend/src/Components/Administration/components/forms.js"],"names":["Button","Form","Input","Select","TimePicker","handleChange","onSubmitDoctor","onSubmitDoctorTimeSlot","onSubmitSection","onSubmitService","onSubmitTimeInterval","styles","React","moment","PlusSquareOutlined","format","days","formAddService","state","setState","required","message","name","event","description","width","price","doctors","length","map","doctor","index","first_name","last_name","timeslots","timeslot","value","day","interval","button","formAddDoctor","firstName","lastName","specialization","sections","section","formAddTimeSlots","startDate","endDate","height","border","formAddSection","selectTimeSlotsDoctors"],"mappings":"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","sourcesContent":["import {Button, Form, Input, Select, TimePicker} from \"antd\";\nimport {\n    handleChange,\n    onSubmitDoctor,\n    onSubmitDoctorTimeSlot,\n    onSubmitSection, onSubmitService,\n    onSubmitTimeInterval\n} from \"../actions\";\nimport styles from \"../administration.module.scss\";\nimport React from \"react\";\nimport moment from 'moment';\nimport {PlusSquareOutlined} from '@ant-design/icons';\n\nconst format = 'HH:mm';\nconst days = [\n    'Luni',\n    'Marti',\n    'Miercuri',\n    'Joi',\n    'Vineri',\n    'Sambata',\n    'Duminica'\n]\nexport const formAddService = (state, setState) => {\n    return (<Form\n        layout={'vertical'}\n        onFinish={onSubmitSection}\n    >\n        <Form.Item\n            name=\"name\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Serviciul trebuie sa aiba un nume!',\n                },\n            ]}\n        >\n            <Input value={state.name} onChange={event => handleChange(setState, event, 'name')} placeholder=\"Nume\"/>\n        </Form.Item>\n        <Form.Item\n            name=\"description\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Serviciul trebuie sa aiba o descriere!',\n                },\n            ]}\n        >\n            <Input.TextArea\n                value={state.description} onChange={event => handleChange(setState, event, 'description')}\n                type=\"description\"\n                placeholder=\"Descriere\"\n            />\n        </Form.Item>\n        <Form.Item>\n            <Input.Group>\n                <Input\n                    placeholder=\"Pret\"\n                    style={{width: '25%'}}\n                    value={state.price}\n                    onChange={event => handleChange(setState, event, 'price')}\n                />\n                <Select\n                    placeholder=\"Valuta\"\n                    onChange={event => handleChange(setState, event, 'currency')}\n                    style={{width: '25%'}}\n                >\n                    <Select.Option value={'RON'} key={1}>RON</Select.Option>\n                    <Select.Option value={'EURO'} key={2}>EURO</Select.Option>\n                </Select>\n                <Select\n                    style={{width: '25%'}}\n                    placeholder={'Alege doctor'}\n                    onChange={event => handleChange(setState, event, 'doctor')}>\n                    {\n                        state.doctors.length > 0 && state.doctors.map((doctor, index) => {\n                            return (\n                                <Select.Option key={index}\n                                               value={doctor.first_name + ' ' + doctor.last_name}>\n                                    {doctor.first_name + ' ' + doctor.last_name}\n                                </Select.Option>\n                            )\n                        })\n                    }\n                </Select>\n                <Select\n                    style={{width: '25%'}}\n                    placeholder={'Alege interval'}\n                    onChange={event => handleChange(setState, event, 'timeslot')}>\n                    {\n                        state.timeslots.length > 0 && state.timeslots.map((timeslot, index) => {\n                            return (\n                                <Select.Option key={index}\n                                               value={timeslot.value.day + ' ' + timeslot.value.interval}>\n                                    {timeslot.value.day + ' ' + timeslot.value.interval}\n                                </Select.Option>\n                            )\n                        })\n                    }\n                </Select>\n            </Input.Group>\n        </Form.Item>\n        <Form.Item>\n            <Button onClick={() => onSubmitService(state, setState)}\n                    className={styles.button}>\n                Salvare\n            </Button>\n        </Form.Item>\n    </Form>)\n};\nexport const formAddDoctor = (state, setState) => {\n    return (\n        <Form\n            layout={'vertical'}\n        >\n            <Form.Item\n                name=\"firstname\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Doctorul trebuie sa aiba un prenume!',\n                    },\n                ]}\n            >\n                <Input.Group>\n                    <Input\n                        style={{width: '50%'}}\n                        value={state.firstName}\n                        onChange={event => handleChange(setState, event, 'firstName')}\n                        placeholder=\"Prenume\"/>\n                    <Input\n                        style={{width: '50%'}}\n                        value={state.lastName}\n                        onChange={event => handleChange(setState, event, 'lastName')}\n                        placeholder=\"Nume\"\n                    />\n                </Input.Group>\n            </Form.Item>\n            <Form.Item\n                name=\"specialization\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Doctorul trebuie sa aiba o specializare!',\n                    },\n                ]}\n            >\n                <Input.TextArea\n                    value={state.specialization} onChange={event => handleChange(setState, event, 'specialization')}\n                    placeholder=\"Specializare\"\n                />\n            </Form.Item>\n            <Form.Item\n                name=\"Sectie\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Doctorul trebuie sa aiba apartina unei sectii!',\n                    },\n                ]}\n            >\n                <Select\n                    showSearch\n                    style={{width: '100%'}}\n                    onChange={event => handleChange(setState, event, 'section')}\n                >\n                    {state.sections.length &&\n                    state.sections.map((section, index) => {\n                        return (\n                            <Select.Option key={index} value={section.name}>{section.name}</Select.Option>)\n                    })\n                    }\n                </Select>\n            </Form.Item>\n            <Form.Item>\n                <Button\n                    onClick={() => {\n                        onSubmitDoctor(\n                            state.lastName, state.firstName, state.specialization,\n                            state.section, state.sections,\n                            setState)\n                    }}\n                    className={styles.button}>\n                    Salvare\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n};\nexport const formAddTimeSlots = (state, setState) => {\n    return (\n        <Form\n            layout={'vertical'}\n        >\n            <Form.Item\n                name=\"Interval orar\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Intervalul este incomplet!',\n                    },\n                ]}\n            >\n                <Input.Group>\n                    <Select style={{width: '30%'}}\n                            onChange={event => handleChange(setState, event, 'day')}\n                            defaultValue={days[0]}\n                    >\n                        {days.map((day, index) => {\n                            return (\n                                <Select.Option key={index} value={day}>{day}</Select.Option>\n                            )\n                        })}\n                    </Select>\n                    <TimePicker\n                        style={{width: '30%'}}\n                        value={state.startDate}\n                        onChange={event => handleChange(setState, event, 'startDate')}\n                        defaultValue={moment('00:00', format)} format={format}/>\n                    <TimePicker\n                        style={{width: '30%'}}\n                        value={state.endDate}\n                        onChange={event => handleChange(setState, event, 'endDate')}\n                        defaultValue={moment('00:00', format)} format={format}/>\n                    <Button style={{width: '10%', height: '34px', border: 'none'}} onClick={() => {\n                        onSubmitTimeInterval(state.day, state.startDate, state.endDate, setState);\n                    }}><PlusSquareOutlined/></Button>\n                </Input.Group>\n            </Form.Item>\n        </Form>\n    )\n};\nexport const formAddSection = (state, setState) => {\n    return (\n        <Form\n            layout={'vertical'}\n            onFinish={onSubmitSection}\n        >\n            <Form.Item\n                name=\"name\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Sectiunea trebuie sa aiba un nume!',\n                    },\n                ]}\n            >\n                <Input value={state.name} onChange={event => handleChange(setState, event, 'name')} placeholder=\"Nume\"/>\n            </Form.Item>\n            <Form.Item\n                name=\"description\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Sectiunea trebuie sa aiba o descriere!',\n                    },\n                ]}\n            >\n                <Input.TextArea\n                    value={state.description} onChange={event => handleChange(setState, event, 'description')}\n                    type=\"description\"\n                    placeholder=\"Descriere\"\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button onClick={() => onSubmitSection(state.name, state.description, setState)}\n                        className={styles.button}>\n                    Salvare\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n};\nexport const selectTimeSlotsDoctors = (state, setState) => {\n    return (\n        <Form\n            layout={'vertical'}\n        >\n            <Form.Item\n                name=\"Interval orar\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Asociere incompleta!',\n                    },\n                ]}\n            >\n                <Input.Group>\n                    <Select\n                        placeholder={'Alege doctor'}\n                        style={{width: '30%'}}\n                        onChange={event => handleChange(setState, event, 'doctor')}>\n                        {\n                            state.doctors.length > 0 && state.doctors.map((doctor, index) => {\n                                return (\n                                    <Select.Option key={index}\n                                                   value={doctor.first_name + ' ' + doctor.last_name}>\n                                        {doctor.first_name + ' ' + doctor.last_name}\n                                    </Select.Option>\n                                )\n                            })\n                        }\n                    </Select>\n                    <Select\n                        placeholder={'Alege interval'}\n                        style={{width: '30%'}}\n                        onChange={event => handleChange(setState, event, 'timeslot')}>\n                        {\n                            state.timeslots.length > 0 && state.timeslots.map((timeslot, index) => {\n                                return (\n                                    <Select.Option key={index}\n                                                   value={timeslot.value.day + ' ' + timeslot.value.interval}>\n                                        {timeslot.value.day + ' ' + timeslot.value.interval}\n                                    </Select.Option>\n                                )\n                            })\n                        }\n                    </Select>\n                    <Button style={{width: '10%', height: '34px', border: 'none'}} onClick={() => {\n                        onSubmitDoctorTimeSlot(state, state.doctor, state.timeslot, setState);\n                    }}><PlusSquareOutlined/></Button>\n                </Input.Group>\n            </Form.Item>\n        </Form>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}